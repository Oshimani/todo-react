{"version":3,"sources":["serviceWorker.ts","enums/ajax-state.enum.ts","contexts/data-source.context.ts","models/data-source-type.model.ts","services/todo.service.ts","services/todo-local-storage.service.ts","services/todo-service-helper.ts","todo/todo.component.tsx","todo-form/todo-form.component.tsx","App.tsx","Root.tsx","themes/default.theme.ts","themes/purple.theme.ts","themes/ice-darkmode.theme.ts","themes/high-contrast.theme.ts","index.tsx"],"names":["Boolean","window","location","hostname","match","AjaxState","DataSourceContext","React","createContext","DataSourceProvider","Provider","DataSourceType","localAPI","localStorage","BASE_URL","TodoService","showCompleted","Promise","resolve","reject","Axios","get","baseURL","then","response","status","data","console","error","catch","id","todoItem","put","post","delete","DB_NAME","TodoLocalStorateService","getItem","setItem","JSON","stringify","Array","min","max","Math","floor","random","parse","String","items","setTimeout","_getItems","filter","item","isComplete","_getDelay","find","todo","Error","forEach","Object","assign","_setItems","newItem","length","push","index","findIndex","undefined","splice","initializeTodoService","dataSourceType","Todo","props","todoService","useContext","useState","initial","submissionStatus","setSubmissionStatus","clickedComplete","pending","update","updatedTodo","onUpdate","Card","styles","root","textAlign","tokens","padding","childrenGap","width","maxWidth","Section","Stack","horizontal","StackItem","isImportant","Icon","fontSize","FontSizes","xxLarge","iconName","grow","Text","xLarge","name","description","borderTop","getTheme","palette","neutralQuaternary","horizontalAlign","ProgressIndicator","MessageBar","messageBarType","MessageBarType","success","IconButton","onClick","disabled","iconProps","deleteById","onDelete","TodoForm","setName","setDescription","setIsImportant","icon","getIcon","menuProps","calloutProps","calloutMain","selectors","minWidth","isBeakVisible","key","title","directionalHintFixed","TextField","field","fieldGroup","background","white","placeholder","value","borderless","onChange","element","resizable","autoAdjustHeight","multiline","create","onCreate","finally","App","todoItems","setTodoItems","setShowCompleted","loadItems","show","getAll","todos","useEffect","style","large","medium","fontWeight","FontWeights","semilight","semibold","margin","backgroundColor","neutralLighterAlt","log","concat","addItem","Separator","Toggle","label","defaultChecked","onText","offText","event","checked","align","ActionButton","text","promises","all","clickedDeleteAllItems","map","getById","reloadSingleItem","removeItem","Root","dataSourcetype","setDataSourceType","selectedTheme","setSelectedTheme","selectedThemeTitle","setSelectedThemeTitle","onClickTheme","themeName","setTheme","loadTheme","themePrimary","themeLighterAlt","themeLighter","themeLight","themeTertiary","themeSecondary","themeDarkAlt","themeDark","themeDarker","neutralLighter","neutralLight","neutralQuaternaryAlt","neutralTertiaryAlt","neutralTertiary","neutralSecondary","neutralPrimaryAlt","neutralPrimary","neutralDark","black","includes","theme","ThemeProvider","semanticColors","bodyBackground","Fabric","CommandBar","position","top","left","zIndex","borderBottom","borderBottomColor","boxShadow","subMenuProps","marginTop","initializeIcons","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a42d19c0.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export enum AjaxState {\n    initial, pending, success, error\n}\n","import React from 'react'\n\nconst DataSourceContext = React.createContext('')\n\nexport const DataSourceProvider = DataSourceContext.Provider\nexport default DataSourceContext","export default abstract class DataSourceType {\n    public static localAPI = 'local-api';\n    public static localStorage = 'local-storage';\n}","import Axios, { AxiosResponse, AxiosError } from 'axios';\nimport ITodoItem from '../models/ITodoItem.model';\nimport ITodoService from './todo-service.interface';\n\nconst BASE_URL: string = 'https://localhost:5001/';\n\nexport default class TodoService implements ITodoService {\n\n    public getAll(showCompleted:boolean): Promise<ITodoItem[]> {\n        return new Promise<ITodoItem[]>((resolve, reject) => {\n            Axios.get(`/api/todoitems`, { baseURL: BASE_URL, })\n\n                .then((response: AxiosResponse) => {\n                    if (response.status === 200) {\n                        resolve(response.data);\n                    } else {\n                        console.error(`Status does not indicate success! -> ${response.status}`);\n                        reject(response);\n                    }\n                })\n\n                .catch((error: AxiosError) => {\n                    reject(error);\n                });\n        });\n    }\n\n    public getById(id: number): Promise<ITodoItem> {\n        return new Promise<ITodoItem>((resolve, reject) => {\n            Axios.get(`/api/todoitems/${id}`, { baseURL: BASE_URL, })\n\n                .then((response: AxiosResponse) => {\n                    if ((response.status % 200) < 100) {\n                        resolve(response.data);\n                    } else {\n                        console.error(`Status does not indicate success! -> ${response.status}`);\n                        reject(response);\n                    }\n                })\n\n                .catch((error: AxiosError) => {\n                    reject(error);\n                });\n        });\n    }\n\n    public update(id: number, todoItem: ITodoItem): Promise<ITodoItem> {\n        return new Promise<ITodoItem>((resolve, reject) => {\n            Axios.put(`/api/todoItems/${id}`, todoItem, { baseURL: BASE_URL })\n\n                .then((response: AxiosResponse) => {\n                    if ((response.status % 200) < 100) {\n                        resolve(response.data);\n                    } else {\n                        console.error(`Status does not indicate success! -> ${response.status}`);\n                        reject(response);\n                    }\n                })\n\n                .catch((error: AxiosError) => {\n                    reject(error);\n                });\n        });\n    }\n\n    public create(todoItem: ITodoItem): Promise<ITodoItem> {\n        return new Promise<ITodoItem>((resolve, reject) => {\n            Axios.post(`/api/todoItems/`, todoItem, { baseURL: BASE_URL })\n\n                .then((response: AxiosResponse) => {\n                    if ((response.status % 200) < 100) {\n                        resolve(response.data);\n                    } else {\n                        console.error(`Status does not indicate success! -> ${response.status}`);\n                        reject(response);\n                    }\n                })\n\n                .catch((error: AxiosError) => {\n                    reject(error);\n                });\n        });\n    }\n\n    public deleteById(id: number): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            Axios.delete(`/api/todoitems/${id}`, { baseURL: BASE_URL, })\n\n                .then((response: AxiosResponse) => {\n                    if ((response.status % 200) < 100) {\n                        resolve(response.data);\n                    } else {\n                        console.error(`Status does not indicate success! -> ${response.status}`);\n                        reject(response);\n                    }\n                })\n\n                .catch((error: AxiosError) => {\n                    reject(error);\n                });\n        });\n    }\n\n}\n","import ITodoItem from '../models/ITodoItem.model';\nimport ITodoService from './todo-service.interface';\n\nconst DB_NAME: string = 'todo-Database';\n\nexport default class TodoLocalStorateService implements ITodoService {\n\n    constructor() {\n        // init local storage db\n        if (!localStorage.getItem(DB_NAME)) {\n            localStorage.setItem(DB_NAME, JSON.stringify(new Array<ITodoItem>()));\n        }\n    }\n\n    // pretend to be remote data\n    private _getDelay(min: number, max: number): number {\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    private _getItems(): ITodoItem[] {\n        return JSON.parse(String(localStorage.getItem(DB_NAME)));\n    }\n\n    private _setItems(items: ITodoItem[]): void {\n        localStorage.setItem(DB_NAME, JSON.stringify(items));\n    }\n\n    public getAll(showCompleted: boolean) {\n        return new Promise<ITodoItem[]>((resolve) => {\n            setTimeout(() => {\n                if (showCompleted)\n                    resolve(\n                        this._getItems()\n                    )\n                else\n                    resolve(\n                        this._getItems().filter(item => !item.isComplete)\n                    );\n            }, this._getDelay(100, 1000));\n        });\n    }\n\n    public getById(id: number): Promise<ITodoItem> {\n        return new Promise<ITodoItem>((resolve, reject) => {\n            setTimeout(() => {\n                const items: ITodoItem[] = this._getItems();\n\n                const item = items.find(todo => todo.id === id);\n                if (item) resolve(item);\n\n                reject(new Error('Item does not exist!'));\n            }, this._getDelay(100, 1000));\n        });\n    }\n\n    public update(id: number, todoItem: ITodoItem): Promise<ITodoItem> {\n        return new Promise<ITodoItem>((resolve, reject) => {\n            setTimeout(() => {\n\n                const items: ITodoItem[] = this._getItems();\n\n                items.forEach(item => {\n                    if (item.id === id) {\n                        Object.assign(item, todoItem);\n                        this._setItems(items);\n                        resolve(todoItem);\n                    }\n                });\n\n                reject(new Error('Item does not exist!'));\n            }, this._getDelay(100, 1000));\n        });\n    }\n\n    public create(todoItem: ITodoItem): Promise<ITodoItem> {\n        return new Promise<ITodoItem>((resolve) => {\n            setTimeout(() => {\n                const items: ITodoItem[] = this._getItems();\n                const newItem: ITodoItem = { ...todoItem, id: items.length + 1 };\n                items.push(newItem);\n                this._setItems(items);\n\n                resolve(newItem);\n            }, this._getDelay(100, 1000));\n        });\n    }\n\n    public deleteById(id: number): Promise<void> {\n        return new Promise<void>((resolve) => {\n            setTimeout(() => {\n                const items: ITodoItem[] = this._getItems();\n                const index = items.findIndex(item => item.id === id);\n                if (index !== undefined) items.splice(index, 1);\n                this._setItems(items);\n\n                resolve();\n            }, this._getDelay(100, 1000));\n        });\n    }\n}\n","import DataSourceType from '../models/data-source-type.model'\nimport TodoService from './todo.service';\nimport TodoLocalStorateService from './todo-local-storage.service';\n\nexport const initializeTodoService = (dataSourceType: string) => {\n    switch (dataSourceType) {\n        case DataSourceType.localAPI:\n            return new TodoService();\n\n        default:\n            return new TodoLocalStorateService();\n    }\n};\n","import React, { useState, useContext } from 'react';\nimport { Card, } from '@uifabric/react-cards';\nimport {\n    Text,\n    Icon,\n    IconButton,\n    StackItem,\n    Stack,\n    FontSizes,\n    DefaultPalette,\n    MessageBar,\n    MessageBarType,\n    ProgressIndicator,\n    getTheme\n} from 'office-ui-fabric-react';\n\nimport ITodoItem from '../models/ITodoItem.model';\nimport ITodoService from '../services/todo-service.interface';\nimport { AjaxState } from '../enums/ajax-state.enum';\nimport { initializeTodoService } from '../services/todo-service-helper';\nimport DataSourceContext from '../contexts/data-source.context';\n\nconst Todo = (props: { item: ITodoItem, onUpdate: Function, onDelete: Function }) => {\n\n    const todoService: ITodoService =\n        initializeTodoService(useContext(DataSourceContext));\n\n    const [submissionStatus, setSubmissionStatus] = useState<AjaxState>(AjaxState.initial);\n\n    const clickedComplete = () => {\n        setSubmissionStatus(AjaxState.pending);\n        todoService.update(props.item.id, { ...props.item, isComplete: true, })\n\n            .then((updatedTodo: ITodoItem) => {\n                // set initial because we already have a message bar for completed todos\n                setSubmissionStatus(AjaxState.initial);\n\n                props.onUpdate(props.item.id);\n            })\n\n            .catch(error => {\n                console.error(`Failed to update!`);\n                setSubmissionStatus(AjaxState.error);\n                setTimeout(() => {\n                    setSubmissionStatus(AjaxState.initial);\n                }, 3000);\n            });\n    };\n\n    const clickedDelete = () => {\n        setSubmissionStatus(AjaxState.pending);\n        todoService.deleteById(props.item.id)\n\n            .then(() => {\n                props.onDelete(props.item.id);\n            })\n\n            .catch(error => {\n                console.error(`Failed to delete!`);\n                setSubmissionStatus(AjaxState.error);\n                setTimeout(() => {\n                    setSubmissionStatus(AjaxState.initial);\n                }, 3000);\n            });\n    };\n\n    return (\n        <div>\n            <Card styles={{ root: { textAlign: 'initial' } }} tokens={{ padding: 5, childrenGap: 5, width: '100%', maxWidth: '-webkit-fill-available' }}>\n\n                {/* HEADING */}\n                <Card.Section tokens={{ padding: 4 }}>\n                    <Stack horizontal tokens={{ childrenGap: 12 }}>\n                        <StackItem>\n                            {props.item.isImportant &&\n                                <Icon styles={{ root: { fontSize: FontSizes.xxLarge } }} iconName=\"LightningBolt\"></Icon>\n                            }\n                            {!props.item.isImportant &&\n                                <Icon styles={{ root: { fontSize: FontSizes.xxLarge } }} iconName=\"DietPlanNotebook\"></Icon>\n                            }\n                        </StackItem>\n                        <StackItem grow>\n                            <Text styles={{ root: { fontSize: FontSizes.xLarge } }}>\n                                {props.item.name}\n                            </Text>\n                        </StackItem>\n                    </Stack>\n\n                </Card.Section>\n\n                {/* DESCRIPTION */}\n                {props.item.description &&\n                    <Card.Section tokens={{ padding: 4 }} styles={{ root: { borderTop: `solid 1px ${getTheme().palette.neutralQuaternary}` } }}>\n                        <Text>{props.item.description}</Text>\n                    </Card.Section>\n                }\n\n                {/* BUTTONS & MESSAGES*/}\n                <Card.Section tokens={{ padding: 4 }} horizontalAlign={\"end\"} horizontal styles={{ root: { borderTop: `solid 1px ${getTheme().palette.neutralQuaternary}` } }}>\n\n                    {/* AJAX STATE */}\n                    {submissionStatus === AjaxState.pending &&\n                        <StackItem grow>\n                            <ProgressIndicator />\n                        </StackItem>\n                    }\n\n                    {/* AJAX STATE */}\n                    {submissionStatus === AjaxState.error &&\n                        <StackItem grow>\n                            <MessageBar messageBarType={MessageBarType.error}>\n                                Operation failed!\n                                </MessageBar>\n                        </StackItem>\n                    }\n\n                    {/* COMLETION INDICATOR */}\n                    {(props.item.isComplete &&\n                        submissionStatus === AjaxState.initial) &&\n                        <StackItem grow>\n                            <MessageBar messageBarType={MessageBarType.success}>\n                                Completed!\n                            </MessageBar>\n                        </StackItem>\n                    }\n                    <IconButton onClick={() => clickedComplete()}\n                        disabled={props.item.isComplete}\n                        iconProps={{ iconName: 'Completed' }}></IconButton>\n                    <IconButton onClick={() => clickedDelete()} iconProps={{ iconName: 'RecycleBin' }}></IconButton>\n                </Card.Section>\n            </Card>\n        </div>\n    )\n}\n\nexport default Todo;\n","import React, { useState, useContext } from 'react'\nimport { Card } from '@uifabric/react-cards';\nimport { Stack, StackItem, MessageBar, MessageBarType, IconButton, TextField, ProgressIndicator } from 'office-ui-fabric-react';\nimport { FontSizes, DefaultPalette, getTheme } from '@uifabric/styling';\nimport ITodoService from '../services/todo-service.interface';\nimport ITodoItem from '../models/ITodoItem.model';\nimport { AjaxState } from '../enums/ajax-state.enum';\nimport { initializeTodoService } from '../services/todo-service-helper';\nimport DataSourceContext from '../contexts/data-source.context';\n\nconst TodoForm = (props: { onCreate: Function }) => {\n\n    const todoService: ITodoService =\n        initializeTodoService(useContext(DataSourceContext));\n\n    const [name, setName] = useState<string>(String());\n    const [description, setDescription] = useState<string>(String());\n    const [isImportant, setIsImportant] = useState<boolean | undefined>(undefined);\n\n    const [submissionStatus, setSubmissionStatus] = useState<AjaxState>(AjaxState.initial);\n\n    const clickedSubmit = () => {\n        setSubmissionStatus(AjaxState.pending);\n\n        // use non important as default\n        if (isImportant === undefined) setIsImportant(false);\n        todoService.create({ name, description, isComplete: false, isImportant } as ITodoItem)\n\n            .then((newItem: ITodoItem) => {\n                setSubmissionStatus(AjaxState.success);\n                props.onCreate(newItem);\n\n                // reset fields for next todo\n                setName(String());\n                setDescription(String());\n                setIsImportant(undefined);\n            })\n\n            .catch(error => {\n                console.error('Failed to create');\n                setSubmissionStatus(AjaxState.error);\n            })\n\n            .finally(() => {\n                // reset submission button\n                setTimeout(() => {\n                    setSubmissionStatus(AjaxState.initial);\n                }, 3000);\n            })\n    };\n\n    const getIcon = () => {\n        switch (isImportant) {\n            case false:\n                return 'DietPlanNotebook';\n            case true:\n                return 'LightningBolt';\n            default:\n                return 'CircleAddition';\n        }\n    }\n\n    return (\n        <div>\n            <div>\n                <Card styles={{ root: { textAlign: 'initial' } }} tokens={{ padding: 5, childrenGap: 5, width: '100%', maxWidth: '-webkit-fill-available' }}>\n                    <Card.Section tokens={{ padding: 4 }}>\n                        <Stack horizontal tokens={{ childrenGap: 12 }}>\n                            <StackItem>\n                                <IconButton styles={{ icon: { fontSize: FontSizes.xxLarge } }}\n                                    iconProps={{ iconName: getIcon() }}\n                                    menuProps={{\n                                        calloutProps: {\n                                            styles: {\n                                                calloutMain: {\n                                                    selectors: {\n                                                        'div': {\n                                                            minWidth: 'unset',\n                                                        },\n                                                        'i': {\n                                                            fontSize: FontSizes.xLarge\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        },\n                                        isBeakVisible: true,\n                                        items: [\n                                            {\n                                                key: 'nonImportant',\n                                                name: 'Common',\n                                                title: 'not important',\n                                                onClick: () => setIsImportant(false),\n                                                iconProps: { iconName: 'DietPlanNotebook' }\n                                            },\n                                            {\n                                                key: 'Important',\n                                                name: 'Important',\n                                                title: 'important',\n                                                onClick: () => setIsImportant(true),\n                                                iconProps: { iconName: 'LightningBolt' }\n                                            }\n                                        ],\n                                        directionalHintFixed: true\n                                    }} ></IconButton>\n                            </StackItem>\n                            <StackItem grow>\n                                <TextField styles={{\n                                    root: {},\n                                    field: { fontSize: FontSizes.xLarge },\n                                    fieldGroup: {\n                                        background: 'none',\n                                        selectors: {\n                                            '&:hover': {\n                                                background: getTheme().palette.white\n                                            }\n                                        }\n                                    }\n                                }}\n                                    placeholder={'Add your title here'}\n                                    value={name}\n                                    borderless\n                                    onChange={(element, value) => setName(String(value))}></TextField>\n                            </StackItem>\n                        </Stack>\n\n                    </Card.Section>\n                    <Card.Section tokens={{ padding: 4 }} styles={{ root: { borderTop: `solid 1px ${getTheme().palette.neutralQuaternary}` } }}>\n                        <TextField styles={{\n                            root: {},\n                            fieldGroup: {\n                                background: 'none',\n                                selectors: {\n                                    '&:hover': {\n                                        background: getTheme().palette.white\n                                    }\n                                }\n                            }\n                        }}\n                            placeholder={'Add your description here'}\n                            value={description}\n                            resizable={false}\n                            autoAdjustHeight\n                            multiline\n                            borderless\n                            onChange={(element, value) => setDescription(String(value))}></TextField>\n                    </Card.Section>\n\n                    {/* BUTTONS & MESSAGES*/}\n                    <Card.Section tokens={{ padding: 4 }} horizontalAlign={\"end\"} horizontal styles={{ root: { borderTop: `solid 1px ${getTheme().palette.neutralQuaternary}` } }}>\n                        {submissionStatus === AjaxState.pending &&\n                            <StackItem grow>\n                                <ProgressIndicator />\n                            </StackItem>\n                        }\n\n                        {submissionStatus === AjaxState.success &&\n                            <StackItem grow>\n                                <MessageBar messageBarType={MessageBarType.success}>\n                                    Added your todo!\n                                </MessageBar>\n                            </StackItem>\n                        }\n\n                        {submissionStatus === AjaxState.error &&\n                            <StackItem grow>\n                                <MessageBar messageBarType={MessageBarType.error}>\n                                    Could not add your todo!\n                                </MessageBar>\n                            </StackItem>\n                        }\n                        <IconButton onClick={() => clickedSubmit()}\n                            disabled={!name || submissionStatus === AjaxState.pending}\n                            iconProps={{ iconName: 'Add' }}></IconButton>\n                    </Card.Section>\n                </Card>\n            </div>\n        </div>\n    )\n}\n\nexport default TodoForm;\n","import React, { useState, useEffect, useContext } from 'react';\nimport {\n  Separator,\n  Text,\n  Stack,\n  StackItem,\n  FontSizes,\n  FontWeights,\n  Toggle,\n  ActionButton,\n  getTheme\n} from 'office-ui-fabric-react';\n\nimport Todo from './todo/todo.component';\nimport ITodoItem from './models/ITodoItem.model';\n\nimport ITodoService from './services/todo-service.interface';\nimport TodoForm from './todo-form/todo-form.component';\nimport DataSourceContext from './contexts/data-source.context';\nimport { initializeTodoService } from './services/todo-service-helper';\n\nconst App: React.FC = () => {\n\n  const [todoItems, setTodoItems] = useState(new Array<ITodoItem>());\n  const [showCompleted, setShowCompleted] = useState<boolean>(true);\n\n  const todoService: ITodoService =\n    initializeTodoService(useContext(DataSourceContext));\n\n  const reloadSingleItem = (id: number) => {\n    console.log(`Reloading item: ${id}`);\n\n    todoService.getById(id)\n\n      .then(todoItem => {\n        // replace updated item\n        setTodoItems(todoItems.map(item => {\n          if (item.id === todoItem.id) {\n            return todoItem\n          };\n          return item;\n        }));\n      })\n  };\n\n  const removeItem = (id: number) => {\n    console.log(`Removing item: ${id}`);\n\n    setTodoItems(todoItems.filter(item => item.id !== id));\n  };\n\n  const addItem = (todoItem: ITodoItem) => {\n    console.log(`Adding item: ${todoItem.id}`);\n\n    // Array.prototyle.push return new length instead of new array -> I use concat\n    setTodoItems(todoItems.concat(todoItem));\n  }\n\n  const loadItems = (show: boolean) => {\n    return new Promise<any>((resolve, reject) => {\n      todoService.getAll(show)\n\n        .then((todos: ITodoItem[]) => { setTodoItems(todos); resolve() })\n\n        .catch(error => { console.error(error); reject() });\n    });\n  };\n\n  const toggleShowCompleted = (value: boolean) => {\n    setShowCompleted(value);\n    loadItems(value);\n  };\n\n  const clickedDeleteAllItems = () => {\n    const promises = new Array<Promise<any>>();\n    todoItems.forEach(item => {\n      if (item.isComplete)\n        promises.push(todoService.deleteById(item.id));\n    });\n    Promise.all(promises)\n\n      .then(() => loadItems(showCompleted))\n\n      .catch(error => console.error(error));\n  }\n\n  //component did mount\n  useEffect(() => {\n    loadItems(showCompleted);\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div style={{ textAlign: 'center' }}>\n        <Text styles={{ root: { fontSize: FontSizes.large } }}>My todo app in react</Text>\n        <br />\n        {\n          todoItems &&\n          <Text styles={{\n            root: {\n              fontSize: FontSizes.medium,\n              fontWeight: FontWeights.semilight,\n              selectors: { 'span': { fontWeight: FontWeights.semibold } }\n            }\n          }}>I found <span>{todoItems.length}</span> todos for you.</Text>\n        }\n        <Stack styles={{\n          root: {\n            margin: 'auto',\n            maxWidth: '60%',\n            minWidth: 350\n          }\n        }} tokens={{ childrenGap: 12, padding: 8 }}>\n          <StackItem styles={{ root: { backgroundColor: getTheme().palette.neutralLighterAlt } }} grow={1} >\n            <TodoForm onCreate={(todoItem: ITodoItem) => addItem(todoItem)}></TodoForm>\n          </StackItem>\n          <Separator></Separator>\n\n          <StackItem styles={{ root: { textAlign: 'initial' } }}>\n            <Stack horizontal>\n              <StackItem grow>\n                <Toggle label=\"Show completed todos\" defaultChecked onText=\"On\" offText=\"Off\"\n                  onChange={(event, checked) => toggleShowCompleted(Boolean(checked))} />\n              </StackItem>\n              <StackItem align='end'>\n                <ActionButton iconProps={{ iconName: 'RecycleBin' }}\n                  text='Delete completed todos'\n                  onClick={() => clickedDeleteAllItems()}></ActionButton>\n              </StackItem>\n            </Stack>\n          </StackItem>\n          {todoItems.map((todo) => {\n            return (\n              <StackItem key={todo.id} styles={{ root: { backgroundColor: getTheme().palette.neutralLighterAlt } }} grow={1} >\n                <Todo item={todo} onUpdate={(id: number) => reloadSingleItem(id)} onDelete={(id: number) => removeItem(id)}></Todo>\n              </StackItem>\n            );\n          })}\n        </Stack>\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useEffect, useState } from 'react';\n\nimport { ThemeProvider } from '@uifabric/foundation';\nimport { DataSourceProvider } from './contexts/data-source.context';\nimport { getTheme, ITheme } from '@uifabric/styling';\nimport { Fabric, CommandBar } from 'office-ui-fabric-react';\n\nimport App from './App';\nimport { PurpleTheme, loadPurpleTheme } from './themes/purple.theme';\nimport { IceDarkmodeTheme, loadIceDarkmodeTheme } from './themes/ice-darkmode.theme';\nimport { DefaultTheme, loadDefaultTheme } from './themes/default.theme';\nimport { HighContrastTheme, loadHightContrastTheme } from './themes/high-contrast.theme';\nimport DataSourceType from './models/data-source-type.model';\n\nconst Root: React.FC = () => {\n\n    const [dataSourcetype, setDataSourceType] = useState<string>(DataSourceType.localStorage);\n    const [selectedTheme, setSelectedTheme] = useState<ITheme>();\n    const [selectedThemeTitle, setSelectedThemeTitle] = useState<string>(DefaultTheme);\n\n    const onClickTheme = (themeName: string) => {\n        // save theme across sessions\n        localStorage.setItem('Theme', themeName);\n\n        setTheme(themeName);\n    };\n\n    const setTheme = (themeName: string) => {\n        setSelectedThemeTitle(themeName);\n        switch (themeName) {\n            case PurpleTheme:\n                setSelectedTheme(loadPurpleTheme());\n                break;\n            case IceDarkmodeTheme:\n                setSelectedTheme(loadIceDarkmodeTheme());\n                break;\n            case HighContrastTheme:\n                setSelectedTheme(loadHightContrastTheme());\n                break;\n            default:\n                setSelectedTheme(loadDefaultTheme());\n                break;\n        }\n    }\n\n    //component did mount\n    useEffect(() => {\n        // initialize data type context\n        console.log(window.location.hostname);\n        if (window.location.hostname.includes('github.io')) {\n            setDataSourceType(DataSourceType.localStorage);\n        }\n\n        // load theme if saved in local storage\n        const theme = localStorage.getItem('Theme');\n        if (theme)\n            setTheme(theme);\n\n        // eslint-disable-next-line\n    }, []);\n\n    return (\n        <ThemeProvider theme={selectedTheme}>\n            <DataSourceProvider value={dataSourcetype}>\n                <div style={{ backgroundColor: getTheme().semanticColors.bodyBackground }}>\n                    <Fabric styles={{ root: { backgroundColor: getTheme().palette.neutralLighterAlt } }}>\n                        <CommandBar styles={{\n                            root: {\n                                position: 'fixed',\n                                top: 0,\n                                left: 0,\n                                zIndex: 1000,\n                                width: '100%',\n                                borderBottom: `solid 1px`,\n                                borderBottomColor: getTheme().palette.themePrimary,\n                                boxShadow: `rgba(0, 0, 0, 0.133) 0px 1.6px 3.6px 0px, rgba(0, 0, 0, 0.11) 0px 0.3px 0.9px 0px`\n                            }\n                        }}\n                            items={[\n                                {\n                                    key: 'theme',\n                                    iconProps: { iconName: 'Color' },\n                                    text: 'Theme',\n                                    subMenuProps: {\n                                        items: [\n                                            {\n                                                key: DefaultTheme,\n                                                iconProps: { iconName: selectedThemeTitle === DefaultTheme ? 'ColorSolid' : 'Color' },\n                                                text: 'Default',\n                                                onClick: () => onClickTheme(DefaultTheme)\n                                            },\n                                            {\n                                                key: PurpleTheme,\n                                                iconProps: { iconName: selectedThemeTitle === PurpleTheme ? 'ColorSolid' : 'Color' },\n                                                text: 'Purple',\n                                                onClick: () => onClickTheme(PurpleTheme)\n                                            },\n                                            {\n                                                key: IceDarkmodeTheme,\n                                                iconProps: { iconName: selectedThemeTitle === IceDarkmodeTheme ? 'ColorSolid' : 'Color' },\n                                                text: 'Ice Darkmode',\n                                                onClick: () => onClickTheme(IceDarkmodeTheme)\n                                            }, {\n                                                key: HighContrastTheme,\n                                                iconProps: { iconName: selectedThemeTitle === HighContrastTheme ? 'ColorSolid' : 'Color' },\n                                                text: 'High Contrast',\n                                                onClick: () => onClickTheme(HighContrastTheme)\n                                            }\n                                        ]\n                                    }\n                                }\n                            ]} />\n\n                        {/* APP CONTAINER */}\n                        <div style={{ marginTop: 44 }}>\n                            <App />\n                        </div>\n                    </Fabric>\n                </div>\n            </DataSourceProvider>\n        </ThemeProvider>\n    );\n}\n\nexport default Root;\n","import { loadTheme } from 'office-ui-fabric-react';\n\nexport const DefaultTheme: string = 'default';\nexport const loadDefaultTheme = () => {\n    return (\n        loadTheme({\n            palette: {\n                themePrimary: '#0078d4',\n                themeLighterAlt: '#f3f9fd',\n                themeLighter: '#d0e7f8',\n                themeLight: '#a9d3f2',\n                themeTertiary: '#5ca9e5',\n                themeSecondary: '#1a86d9',\n                themeDarkAlt: '#006cbe',\n                themeDark: '#005ba1',\n                themeDarker: '#004377',\n                neutralLighterAlt: '#f8f8f8',\n                neutralLighter: '#f4f4f4',\n                neutralLight: '#eaeaea',\n                neutralQuaternaryAlt: '#dadada',\n                neutralQuaternary: '#d0d0d0',\n                neutralTertiaryAlt: '#c8c8c8',\n                neutralTertiary: '#bab8b7',\n                neutralSecondary: '#a3a2a0',\n                neutralPrimaryAlt: '#8d8b8a',\n                neutralPrimary: '#323130',\n                neutralDark: '#605e5d',\n                black: '#494847',\n                white: '#ffffff',\n            }\n        })\n    );\n};\n","import { loadTheme } from 'office-ui-fabric-react';\nexport const PurpleTheme: string = 'purple';\nexport const loadPurpleTheme = () => {\n    return (\n        loadTheme({\n            palette: {\n                themePrimary: '#7a00d4',\n                themeLighterAlt: '#f9f3fd',\n                themeLighter: '#e7d0f8',\n                themeLight: '#d3a9f2',\n                themeTertiary: '#ab5ce5',\n                themeSecondary: '#881ad9',\n                themeDarkAlt: '#6e00be',\n                themeDark: '#5d00a1',\n                themeDarker: '#440077',\n                neutralLighterAlt: '#f8f8f8',\n                neutralLighter: '#f4f4f4',\n                neutralLight: '#eaeaea',\n                neutralQuaternaryAlt: '#dadada',\n                neutralQuaternary: '#d0d0d0',\n                neutralTertiaryAlt: '#c8c8c8',\n                neutralTertiary: '#bab8b7',\n                neutralSecondary: '#a3a2a0',\n                neutralPrimaryAlt: '#8d8b8a',\n                neutralPrimary: '#323130',\n                neutralDark: '#605e5d',\n                black: '#494847',\n                white: '#ffffff',\n            }\n        })\n    );\n};\n","import { loadTheme } from 'office-ui-fabric-react';\nexport const IceDarkmodeTheme: string = 'ice-darkmode';\nexport const loadIceDarkmodeTheme = () => {\n    return (\n        loadTheme({\n            palette: {\n                themePrimary: '#00c7d4',\n                themeLighterAlt: '#000808',\n                themeLighter: '#002022',\n                themeLight: '#003c3f',\n                themeTertiary: '#00777f',\n                themeSecondary: '#00afba',\n                themeDarkAlt: '#16ccd8',\n                themeDark: '#35d4de',\n                themeDarker: '#66dfe7',\n                neutralLighterAlt: '#2c2c2c',\n                neutralLighter: '#353535',\n                neutralLight: '#434343',\n                neutralQuaternaryAlt: '#4b4b4b',\n                neutralQuaternary: '#525252',\n                neutralTertiaryAlt: '#707070',\n                neutralTertiary: '#f3f3f3',\n                neutralSecondary: '#f5f5f5',\n                neutralPrimaryAlt: '#f7f7f7',\n                neutralPrimary: '#ededed',\n                neutralDark: '#fbfbfb',\n                black: '#fdfdfd',\n                white: '#232323',\n            }\n        })\n    );\n};\n","import { loadTheme } from 'office-ui-fabric-react';\nexport const HighContrastTheme: string = 'high-contrast';\nexport const loadHightContrastTheme = () => {\n    return (\n        loadTheme({\n            palette: {\n                themePrimary: '#faf400',\n                themeLighterAlt: '#0a0a00',\n                themeLighter: '#282700',\n                themeLight: '#4b4900',\n                themeTertiary: '#969300',\n                themeSecondary: '#dcd700',\n                themeDarkAlt: '#fbf619',\n                themeDark: '#fcf73c',\n                themeDarker: '#fcf96f',\n                neutralLighterAlt: '#1d1d1d',\n                neutralLighter: '#262626',\n                neutralLight: '#353535',\n                neutralQuaternaryAlt: '#3e3e3e',\n                neutralQuaternary: '#454545',\n                neutralTertiaryAlt: '#656565',\n                neutralTertiary: '#fcfcfc',\n                neutralSecondary: '#fcfcfc',\n                neutralPrimaryAlt: '#fdfdfd',\n                neutralPrimary: '#fafafa',\n                neutralDark: '#fefefe',\n                black: '#fefefe',\n                white: '#121212',\n            }\n        })\n    );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { initializeIcons } from '@uifabric/icons';\nimport Root from './Root';\ninitializeIcons();\n\nReactDOM.render(\n    <Root />\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}